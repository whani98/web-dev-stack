.container {
  /* container를 display:flex */
  display: flex;
  background: #f0f0f0;
  padding: 1rem;
  border: 1px solid #ccc;
}
.tall {
  height: 300px;
}
.item {
  background: white;
  border: 2px solid #333;
  padding: 1rem;
  text-align: center;
}
/* flex-direction */
#fd {
  /* row 기본값, 가로 방향 */
  flex-direction: row;
  /* row-reverse 가로 반대 방향 */
  flex-direction: row-reverse;
  /*column 세로 방향  */
  flex-direction: column;
  /* column-reverse 세로 반대 방향  */
  flex-direction: column-reverse;
}

/* justify-content */
#jc {
  /* flex-start 기본값, 왼쪽 정렬 */
  justify-content: flex-start;
  /* flex-end 오른쪽 정렬 */
  justify-content: flex-end;
  /* center 가운데 정렬 */
  justify-content: center;
  /* space-between 양 끝 정렬 */
  justify-content: space-between;
  /* space-around 균일 간격, 하나의 아이템 양쪽의 간격이 같음 */
  justify-content: space-around;
  /* space-evenly 동일 간격, 아이템과 아이템 사이의 간격이 같음*/
  justify-content: space-evenly;
}
/* align-items */
#ai {
  /* strectch 기본값, 높이 자동 확장 */
  align-items: stretch;
  /* flex-start 또는 start 상단 정렬 */
  align-items: flex-start;
  align-items: start;
  /* flex-end 또는 end 하단 정렬 */
  align-items: flex-end;
  align-items: end;
  /* center 수직 중앙 정렬 */
  align-items: center;
  /* align-items: center; flex-direction: column; 가운데 정렬*/
}
/* flex-wrap */
#fw {
  /* nowrap 줄바꿈 비허용 */
  flex-wrap: nowrap;
  /* wrap 줄바꿈 허용 */
  flex-wrap: wrap;
  /* wrap-reverse 역방향 줄바꿈*/
  flex-wrap: wrap-reverse;
}
#fw .item {
  width: 100px;
  height: 100px;
}
/* align-self: 아이템에게 적용 */
.self-start {
  align-self: flex-start;
}
.self-center {
  align-self: center;
}
.self-end {
  align-self: flex-end;
}

/* order 순서변경 : 양수면 오른쪽으로, 음수면 왼쪽으로 숫자만큼 이동*/
.order1 {
  order: 2;
}
.order3 {
  order: -1;
}

/* gap 아이템 사이 간격*/
#gap {
  /* gap 좌우에 간격이 주어짐 */
  gap: 20px;
}
#gap .item {
  /* margin 상하좌우에 간격이 주어짐 */
  /* margin: 50px; */
  margin-right: 50px;
}

/* flex-grow */
/* 컨테이너보다 아이템이 작을 때,
   flex-grow 값이 클 수록 남은 공간을 더 많이 차지 */
#grow-1 {
  flex-grow: 1;
}
#grow-2 {
  flex-grow: 2;
}
#grow-3 {
  flex-grow: 3;
}

/* flex-shrink */
/* 컨테이너보다 아이템이 클 때
   flex-shrink 값이 작을수록 더 적게 줄어든다. 
   0일 때는 아예 줄어들지 않는다.*/
#shrink .item {
  width: 100px;
}
#shrink-1 {
  flex-shrink: 0;
}
#shrink-2 {
  flex-shrink: 1;
}
#shrink-3 {
  flex-shrink: 2;
}

/* flex-basis */
/* width로 조정가능하기 때문에  */
#basis-1 {
  flex-basis: 100px;
}
#basis-2 {
  flex-basis: 200px;
}
#basis-3 {
  flex-basis: 150px;
}

/* flex : flex-grow flex-shrink flex-basis를 한 번에 사용할 수 있다.*/
#flex-1 {
  /* 기본형 */
  flex: 0 1 auto;
}
#flex-2 {
  /* grow: 1, shrink: 1, basis: 0% */
  flex: 1;
}
#flex-3 {
  /* 완전히 고정시키고자 할때 사용 */
  flex: none;
}

/* align-content */
#ac {
  flex-wrap: wrap;
  height: 200px;
  /* flex-start 상단 정렬 */
  align-content: flex-start;
  /* center 중앙 정렬 */
  align-content: center;
  /* space-between 양끝 정렬 */
  align-content: space-between;
}
